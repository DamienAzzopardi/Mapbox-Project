<!DOCTYPE html>
<html>
<head>
  <meta charset='utf-8' />
  <title>Modulaci√≥ map</title>
  <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
  <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.44.0/mapbox-gl.js'></script>
  <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.44.0/mapbox-gl.css' rel='stylesheet' />
  <style>
    body { margin:0; padding:0; }
    #map-outer {
      position: relative;
      width:100%;
      padding-bottom: 56.25%;
    }
    #map-inner {
      position: absolute;
      top: 0;
      bottom: 0;
      width: 100%;
      height: 100%;
    }

    .Main-content {
      padding-top: 0;
      padding-bottom: 0;
    }

    .mapboxgl-popup {
      color: #EEEEEE;
      font-family: 'brandon-grotesque';
    }

    .mapboxgl-popup-anchor-top .mapboxgl-popup-tip {
      border-bottom-color: #222222;
    }
    .mapboxgl-popup-anchor-top-left .mapboxgl-popup-tip {
      border-bottom-color: #222222;
    }
    .mapboxgl-popup-anchor-top-right .mapboxgl-popup-tip {
      border-bottom-color: #222222;
    }
    .mapboxgl-popup-anchor-bottom .mapboxgl-popup-tip {
      border-top-color: #222222;
    }
    .mapboxgl-popup-anchor-bottom-left .mapboxgl-popup-tip {
      border-top-color: #222222;
    }
    .mapboxgl-popup-anchor-bottom-right .mapboxgl-popup-tip {
      border-top-color: #222222;
    }
    .mapboxgl-popup-anchor-left .mapboxgl-popup-tip {
      border-right-color: #222222;
    }
    .mapboxgl-popup-anchor-right .mapboxgl-popup-tip {
      border-left-color: #222222;
    }

    .mapboxgl-popup .mapboxgl-popup-close-button {
      color: #EEEEEE;
      outline: none;
    }
    
    .mapboxgl-popup .mapboxgl-popup-content {
      background-color: #222222;
    }

    @media screen and (max-width: 375px) {
      #map-outer {
        padding-bottom: 130%;
      }
    }
  </style>
</head>
<body>
  <div id="map-outer">
      <div id="map-inner"></div>
  </div>
  <script>
    mapboxgl.accessToken = 'pk.eyJ1IjoiZGFtaWVuYXp6b3BhcmRpIiwiYSI6ImNqYnRrMWhodjFjZnMzMnJua2k3ejYydzgifQ.2NNIqf3tpKLvYmljHQLf2w';
    var map = new mapboxgl.Map({
      container: 'map-inner', // container id
      style: 'mapbox://styles/damienazzopardi/cjde6g7tpea1g2rpn6j5tmxtd', // stylesheet location
      center: [2.1734, 41.3851], // starting position [lng, lat]
      zoom: 10 // starting zoom
    });

    // Add geolocate control to the map.
    map.addControl(new mapboxgl.GeolocateControl({
      positionOptions: {
          enableHighAccuracy: true
      },
      trackUserLocation: true
    }));
        
    // Add zoom and rotation controls to the map.
    map.addControl(new mapboxgl.NavigationControl());


  var getPopupHtmlContent = function(data) {
    var html = `<h3>${data.Name}</h3>`;
    
    // Base info
    var propertiesNames = Object.keys(data);
    var regexBase = new RegExp('^Base_', 'i');
    var regexContact = new RegExp('^C_', 'i');
    var hasContactProperties = false;
  
    var ulBase = '<ul>';
    var ulContact = '<ul>';

    for(var i = 0; i < propertiesNames.length; i++) {
      if(regexBase.test(propertiesNames[i])) {
        ulBase += `<li>${data[propertiesNames[i]]}</li>`;
      }

      if(regexContact.test(propertiesNames[i])) {
        var contactType = propertiesNames[i].split('C_')[1];
        ulContact += `<li><a href="${data[propertiesNames[i]]}">${contactType}</a></li>`;
        hasContactProperties = true;
      }
    }

    ulBase += '</ul>';
    ulContact += '</ul>';

    html += ulBase;

    if(hasContactProperties) {
      html += '<h4>Contact</h4>';
      html += ulContact;
    }

    return html;
  }

  /* 
  	Interactivity stuff
   */
  var handleClick = function(e)  {
    var features = map.queryRenderedFeatures(e.point, {
      layers: ['modulacio-mapbox-dataset-februar']
    });
    if (!features.length) {
      return;
    }
    var feature = features[0];

    var popup = new mapboxgl.Popup({
        offset: [0, -15]
      })
      .setLngLat(feature.geometry.coordinates)
      .setHTML(getPopupHtmlContent(feature.properties))
      .setLngLat(feature.geometry.coordinates)
      .addTo(map);
  };
  map.on('click', handleClick);

  </script>
</body>
</html>