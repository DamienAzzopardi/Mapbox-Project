<!DOCTYPE html>
<html>
<head>
  <meta charset='utf-8' />
  <title>Modulaci√≥ map</title>
  <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
  <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.44.0/mapbox-gl.js'></script>
  <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.44.0/mapbox-gl.css' rel='stylesheet' />
  <style>
    body {
      margin: 0;
      padding: 0;
    }
    #map-outer {
      position: relative;
      width:100%;
      padding-bottom: 56.25%;
    }
    #map-inner {
      position: absolute;
      top: 0;
      bottom: 0;
      width: 100%;
      height: 100%;
    }

    .Main-content {
      padding-top: 0;
      padding-bottom: 0;
    }

    .mapboxgl-popup {
      color: #CCCCCC;
      font-family: 'brandon-grotesque', Helvetica, sans-serif;
    }

    .mapboxgl-popup-anchor-top,
    .mapboxgl-popup-anchor-top-left,
    .mapboxgl-popup-anchor-top-right {
      margin-top: 30px;
    }

    .mapboxgl-popup-anchor-top .mapboxgl-popup-tip {
      border-bottom-color: #222222;
    }

    .mapboxgl-popup-anchor-top-left .mapboxgl-popup-tip {
      border-bottom-color: #222222;
    }
    
    .mapboxgl-popup-anchor-top-right .mapboxgl-popup-tip {
      border-bottom-color: #222222;
    }

    .mapboxgl-popup-anchor-bottom .mapboxgl-popup-tip {
      border-top-color: #222222;
    }

    .mapboxgl-popup-anchor-bottom-left .mapboxgl-popup-tip {
      border-top-color: #222222;
    }

    .mapboxgl-popup-anchor-bottom-right .mapboxgl-popup-tip {
      border-top-color: #222222;
    }

    .mapboxgl-popup-anchor-left .mapboxgl-popup-tip {
      border-right-color: #222222;
    }

    .mapboxgl-popup-anchor-right .mapboxgl-popup-tip {
      border-left-color: #222222;
    }

    .mapboxgl-popup .mapboxgl-popup-close-button {
      color: #EEEEEE;
      outline: none;
    }
    
    .mapboxgl-popup .mapboxgl-popup-content {
      background-color: #222222;
      padding: 20px;
    }

    .mapboxgl-popup .mapboxgl-popup-content ul {
      list-style: none;
      padding: 0;
      margin: 0;
    }

    .mapboxgl-popup .mapboxgl-popup-content ul > li {
      text-transform: initial;
    }

    .mapboxgl-popup .mapboxgl-popup-content h3 {
      color: #FFFFFF;
      margin: 0;
      margin-bottom: 0;
      font-size: 14px;
      font-weight: 550;
      letter-spacing: 2.5px;
    }

    .mapboxgl-popup .mapboxgl-popup-content span.location-type {
      display: block;
      margin: -5px 0 10px 0;
      text-transform: uppercase;
      font-weight: normal;
    }

    .mapboxgl-popup .mapboxgl-popup-content h4 {
      text-transform: uppercase;
      font-weight: 550;
      letter-spacing: 2px;
      font-size: 12px;
      color: #FFFFFF;
      margin: 20px 0 0 0;
    }

    @media screen and (max-width: 375px) {
      #map-outer {
        padding-bottom: 130%;
      }
    }
  </style>
</head>
<body>
  <div id="map-outer">
      <div id="map-inner"></div>
  </div>
  <script>
    Array.prototype.move = function(from, to) {
      this.splice(to, 0, this.splice(from, 1)[0]);
    };

    mapboxgl.accessToken = 'pk.eyJ1IjoiZGFtaWVuYXp6b3BhcmRpIiwiYSI6ImNqYnRrMWhodjFjZnMzMnJua2k3ejYydzgifQ.2NNIqf3tpKLvYmljHQLf2w';
    var map = new mapboxgl.Map({
      container: 'map-inner', // container id
      style: 'mapbox://styles/damienazzopardi/cjg1v9i1x2ql72rrssi3q648f', // stylesheet location
      center: [2.1734, 41.3851], // starting position [lng, lat]
      zoom: 12 // starting zoom
    });

    // Add geolocate control to the map.
    map.addControl(new mapboxgl.GeolocateControl({
      positionOptions: {
        enableHighAccuracy: true
      },
      trackUserLocation: true
    }));
        
    // Add zoom and rotation controls to the map.
    map.addControl(new mapboxgl.NavigationControl());
    
    // Change the cursor to a pointer when the mouse is over the places layer.
    map.on('mouseenter', 'modulacio-mapbox-dataset-februar', function () {
        map.getCanvas().style.cursor = 'pointer';
    });

    // Change it back to a pointer when it leaves.
    map.on('mouseleave', 'modulacio-mapbox-dataset-februar', function () {
        map.getCanvas().style.cursor = '';
    });


    var getPopupHtmlContent = function(data) {
      var html = `<h3>${data.Name}</h3>`;
      
      // Base info
      var propertiesNames = Object.keys(data);
      var regexBase = new RegExp('^Base_', 'i');
      var regexContact = new RegExp('^C_', 'i');
      var hasContactProperties = false;
    
      var ulBase = '<ul>';
      var ulContact = '<ul>';

      // Reorder properties
      var typeIndex = propertiesNames.indexOf('Base_Type');
      propertiesNames.splice(typeIndex, 1);
      html += `<span class="location-type">${data['Base_Type']}</span>`;

      for(var i = 0; i < propertiesNames.length; i++) {
        if(regexBase.test(propertiesNames[i])) {
          ulBase += `<li>${data[propertiesNames[i]]}</li>`;
        }

        if(regexContact.test(propertiesNames[i])) {
          var contactType = propertiesNames[i].split('C_')[1];
          ulContact += `<li><a target="_blank" href="${data[propertiesNames[i]]}">${contactType}</a></li>`;
          hasContactProperties = true;
        }
      }

      ulBase += '</ul>';
      ulContact += '</ul>';

      html += ulBase;

      if(hasContactProperties) {
        html += '<h4>Contact</h4>';
        html += ulContact;
      }

      return html;
    }

    /* 
      Interactivity stuff
    */
    var handleClick = function(e)  {
      var features = map.queryRenderedFeatures(e.point, {
        layers: ['modulacio-mapbox-dataset-februar']
      });
      if (!features.length) {
        return;
      }
      var feature = features[0];

      var popup = new mapboxgl.Popup({
          offset: [0, -15]
        })
        .setLngLat(feature.geometry.coordinates)
        .setHTML(getPopupHtmlContent(feature.properties))
        .setLngLat(feature.geometry.coordinates)
        .addTo(map);
    };
    map.on('click', handleClick);

  </script>
</body>
</html>